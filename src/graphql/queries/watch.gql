type Query {
    watchContents(category: Category, status: Status, userId: Int, page: Int, size: Int): [Watch!]!
    watchCount(category: Category, status: Status, userId: Int): Int
    notInterestedContents(userId: Int, page: Int, size: Int): [Watch!]!
}
type Mutation {
    saveWatch(input: WatchInput): Watch
    deleteWatch(userId: Int, contentId: Int): Watch
}
enum Status {
    NONE
    WISH
    WATCHING
}
input WatchInput {
    userId: Int
    contentId: Int
    status: Status
}
type Watch {
    id: ID!
    contentId: Int
    userId: Int
    status: Status
    content: Content
    createdAt: Date
    updatedAt: Date
}