type Query {
    popularComments: [Comment]
    usersCommentCount(userId: Int!): Int
    usersComments(category: Category!, userId: Int!, page: Int!, size: Int!): [Comment]
    contentsComments(contentId: Int!, page: Int!, size: Int!): [Comment]
    collectionsComments(collectionId: Int!, page: Int!, size: Int!): [Comment]
}
type Mutation {
    createComment(input: CommentInput): Comment
    deleteComment(id: ID!): Comment
}
input CommentInput {
    collectionId: Int
    contentId: Int
    parentCommentId: Int
    userId: Int!
    text: String!
    isSpoiler: Boolean!
}
type Comment {
    id: ID
    collectionId: Int
    contentId: Int
    parentCommentId: Int
    userId: Int
    text: String
    isSpoiler: Boolean
    heartCount: Int
    createdAt: Date
    updatedAt: Date
    content: Content
}